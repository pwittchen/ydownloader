#!/usr/bin/env bash

set -e # automatically exit script on error

# test mode is needed for execution of the unit tests
if [ "$TEST_MODE" == "" ]
then
  TEST_MODE=false
fi

CONF_FILE=$HOME/.ydownloader.conf

function showHelp() {
  echo "
        ydownloader is a script responsible
        for downloading SAP Hybris Commerce Suite from Artifactory

        Usage:
          -d    downloading Commerce Suite
          -u    showing Commerce Suite Download Url
          -t    showing Commerce Suite Release Time
          -s    saving username and password
          -c    clearing username and password
          -h    showing help
        "
}

function setCommerceSuiteVersion() {
  echo -n "SAP Hybris Commerce Suite version (leave empty for the latest): "
  read COMMERCE_SUITE_VERSION
}

function setArtifactType() {
  echo -n "Set artifact type (release or snapshot - leave empty for release): "
  read ARTIFACT_TYPE

  if [ "$ARTIFACT_TYPE" == "" ]
  then
    ARTIFACT_TYPE="release"
  fi
}

function saveUsernameAndPassword() {
  echo "removing configuration file in order to save fresh credentials"
  clearUsernameAndPassword
  setUsernameAndPassword
  echo "USERNAME=$(echo $USERNAME);PASSWORD=$(echo $PASSWORD)" > $CONF_FILE
  echo $'\nusername and password are saved'
}

function clearUsernameAndPassword() {
  if [ ! -f $CONF_FILE ]; then
    echo "there was no configuration file to remove"
  else
    rm -i $CONF_FILE
    if [ ! -f $CONF_FILE ]; then
      echo "username and password were removed"
    else
      echo "username and password were NOT removed"
      exit 0
    fi
  fi
}

function setUsernameAndPassword() {
  if [ ! -f $CONF_FILE ]; then
    echo -n "SAP username (e-mail): "
    read USERNAME
    echo -n "SAP password: "
    read -s PASSWORD
  else
    . $CONF_FILE
  fi
}

function setCommerceSuiteDownloadUrl() {
  setCommerceSuiteVersion
  setArtifactType
  setUsernameAndPassword
  echo "getting Commerce Suite details from Artifactory..."
  setDownloadEndpoint
}

function setDownloadEndpoint() {
  # perform first API call
  API_URL="https://repository.hybris.com/api"
  RESPONSE_WITH_URL_ENDPOINT=$(curl -s -u $USERNAME:$PASSWORD \
  $API_URL/search/artifact\?name\=commerce-suite-$COMMERCE_SUITE_VERSION\&repos\=hybris-$ARTIFACT_TYPE)
  # get first endpoint for downloading Commerce Suite through Artifactory REST API
  COMMERCE_SUITE_DOWNLOAD_URL_ENDPOINT=$(echo $RESPONSE_WITH_URL_ENDPOINT | extractValueFromJson zip)
  # get response from previously extracted endpoint from which download uri can be extracted
  RESPONSE_URL_WITH_DETAILS=$(curl -s -u $USERNAME:$PASSWORD $COMMERCE_SUITE_DOWNLOAD_URL_ENDPOINT)
}

# extract value of a given parameter from JSON data
function extractValueFromJson() {
  python -mjson.tool | grep $1 | tail -1 | awk '{print $2}' | sed -e 's/^"//' -e 's/"$//'
}

# cut last n-1 chars
function cutLastChars() {
  rev | cut -c "$1"- | rev
}

function getValueFromResponse() {
  echo $RESPONSE_URL_WITH_DETAILS | extractValueFromJson $1 | cutLastChars 3
}

function showCommerceSuiteDownloadUrl() {
  setCommerceSuiteDownloadUrl
  echo $(getValueFromResponse downloadUri)
}

function showCommerceSuiteReleaseTime() {
  setCommerceSuiteDownloadUrl
  echo $(getValueFromResponse lastUpdated)
}

function downloadCommerceSuite() {
  setCommerceSuiteDownloadUrl
  echo "Checking if desired version of the Commerce Suite is available in the current directory"
  downloadPath="$(getValueFromResponse downloadUri)"

  if [ ! -f $(basename $downloadPath) ]; then
    echo "starting download of Commerce Suite from Artifactory..."
    wget --http-user=$USERNAME --http-password=$PASSWORD $downloadPath
  else
    echo "You are already up to date with your desired Commerce Suite"
    echo "If you want to re-download it, remove *.zip file from the current directory"
  fi
}

# command line arguments are skipped in unit tests
if [ "$TEST_MODE" = false ] ; then
  OPTIND=1 # reset in case getopts has been used previously in the shell.

  while getopts "hscutd" opt; do
      case "$opt" in
      h)
          showHelp
          exit 0
          ;;
      s)  saveUsernameAndPassword
          ;;
      c)  clearUsernameAndPassword
          ;;
      u)  showCommerceSuiteDownloadUrl
          ;;
      t)  showCommerceSuiteReleaseTime
          ;;
      d)  downloadCommerceSuite
          ;;
      esac
  done

  shift $((OPTIND-1))

  [ "$1" = "--" ] && shift
else
  echo "TEST_MODE enabled"
fi
